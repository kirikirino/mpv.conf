#----------------------------------------
#   解码
#----------------------------------------

# 使用硬解（原生模式）
hwdec=d3d11va-copy

# 尽可能所有格式先尝试硬解
hwdec-codecs=all

# 高优先级
priority=high

# 视频输出驱动
vo= libmpv

# 选择图形绘制接口
# SVP补帧时推荐设置为d3d11
# opengl是最不推荐选择，vulkan的10bit尚未完全实现
gpu-api=d3d11


#----------------------------------------
#   缓存
#----------------------------------------

# 退出时保存当前播放位置
save-position-on-quit=yes

# 保存缓存加速启动
icc-cache-dir="~~/icc_cache"

# 在此目录中存储和加载已编译的GLSL着色器缓存，可以提高启动性能
gpu-shader-cache-dir="~~/shaders_cache"


#----------------------------------------
#   视频
#----------------------------------------

# 使用内置的预设的较高画质方案
profile=gpu-hq

# 进行校色
icc-profile-auto
vf-append=format=gamma=gamma2.2

# 从ICC配置文件的每个维度生成的3D LUT的大小。默认值为 64x64x64
icc-3dlut-size=256x256x256

# 指定目录存储和加载从ICC配置文件创建的3D LUT，可以用来加快加载速度。
icc-cache-dir="~~/icc_cache"

# 启用 interpolation 来消除帧率问题造成的卡顿
video-sync=display-resample
video-sync-max-video-change=5

# 减少由于视频fps和显示刷新率不匹配而引起的卡顿（也称为抖动）。
interpolation

# 时间插值算法（非MEMC运动补偿）
# oversample是维持源观感的算法（效果类似MADVR的smoothmotion），默认值 mitchell
tscale=oversample

# 跳转时丢帧，关闭利于修正音频延迟
# SVP补帧时推荐设置为no
hr-seek-framedrop=no

# 放大算法
scale=ewa_lanczossharp

# 缩小算法
dscale=mitchell

# 是否开启色深抖动弥补色彩转换损失
# 8位显示器写8，10位显示器写10，auto的值取决于 --gpu-api 不一定正确
# 如果8抖10的显示器使用10存在输出异常的情况，改回值8
dither-depth=auto


#----------------------------------------
#   音频
#----------------------------------------

# 音频输出
# win10默认使用WASAPI
# 其他系统请相应更改音频输出方式
ao=coreaudio

# <100.0-1000.0> 最大音量。默认值130
volume-max=100


#----------------------------------------
#   操作
#----------------------------------------

# 是否执行HIDPI缩放，默认yes。默认值情况下初始化的视频窗口随DPI改变大小
hidpi-window-scale=no

# 窗口模式下最大占屏幕的百分比（例如在FHD屏上打开4k视频初始窗口过大）
autofit-larger=80%x80%

# 窗口模式下最小占屏幕的百分比（例如在4k屏上打开720p视频初始窗口过小）
autofit-smaller=50%x50%

# 自动加载同名外置音轨
audio-file-auto=fuzzy

# 音轨首选语言为日语
alang=jpn,ja,eng,en

# 自动加载同名外置字幕
sub-auto=fuzzy

# 字幕首选语言为中文，但MPV优先加载外挂轨道，此项参数可能实际用处不大
slang=chi,zh-CN,sc,chs

# 屏蔽原OSC界面
#osc=no

# 使字幕输出在黑边上
sub-ass-force-margins=yes

# 视频开启时的默认音量
volume=100

# 截图输出在桌面
screenshot-directory="~~desktop/"

# 截图文件格式
screenshot-format=png  

# 使用适当的色彩空间标记屏幕截图（并非所有格式受支持）
#screenshot-tag-colorspace=yes

# 主要影响PNG，尽可能使用和视频输出时相同的位深
#screenshot-high-bit-depth=yes

# 播放完毕后自动退出
keep-open=no


#----------------------------------------
#   OSD
#----------------------------------------

# 禁用 OSD
#osd-level=0

# 禁用 osd-bar
osd-bar=no

# 在跳转时间轴时显示的信息类型
osd-on-seek=msg

# 禁用 OSD 字体边框
osd-border-size=0

# 调整 OSD 字体大小
osd-font-size=35


#----------------------------------------
#   条件配置
#----------------------------------------

[DeBand+]
 profile-desc=自定义去色带方案
 deband
 # <1-16> 去色带执行次数，越高强度但也越费时费力，数值>4实际无效（默认1）
 deband-iterations=3
 # <0-4096> 滤波器的截止阈值，更高的数字会增加强度，但会逐渐减少图像细节（默认32）
 deband-threshold=48
 # <1-64> 初始半径，越大的值去色带越强且性能占用越高；值越小越平滑（默认值16）。如果增大 --deband-iterations，需减小此值来进行补偿
 deband-range=12
 # <0-4096> [如果使用以下两个静态降噪着色器，将此设置为0] 添加额外动态噪点，有助于掩盖剩余的量化伪影（默认48）
 deband-grain=24

[Tscale-box]
 # 这组时间插值方案参数来自开源社区，顺滑但不一定适合所有源 https://github.com/mpv-player/mpv/issues/2685
 tscale=box
 tscale-window=quadric
 tscale-radius=1.0
 tscale-clamp =0.0

[HDR2SDR]
 profile-desc=转化HDR在SDR设备上的模拟显示
 profile-cond=p["video-params/primaries"]=="bt.2020"
 profile-restore=copy
 # 使用零拷贝的方式快速解码
 hwdec=d3d11va
 # 问题状态 https://github.com/mpv-player/mpv/issues/6368
 blend-subtitles=no
 # 此选项基本上提供了动态的基于场景的色调映射
 hdr-compute-peak=yes
 cscale=catmull_rom
 scale=spline36
 deband=no
 # 此项用于清空vf列表恢复合理的HDR播放效果（如果启用 --vf=format:gamma=gamma2.2 的话会影响hdr的显示）
 vf="" 
 # 看HDR不需要花里胡哨的东西（认真的）
 glsl-shaders=""